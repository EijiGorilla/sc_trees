"use strict";(self.webpackChunksc_trees=self.webpackChunksc_trees||[]).push([[8405],{58405:(e,t,i)=>{i.r(t),i.d(t,{default:()=>V});var r=i(27366),s=i(63780),h=i(40281),a=i(77178),n=i(42537),o=i(94172),l=i(49861),d=(i(93169),i(32718),i(69912)),p=i(40653),c=i(54889),g=i(16406),u=i(44745),_=i(21604),w=i(99821),y=i(70491),f=i(88109),m=i(75391),k=i(85992),M=i(67581);const C=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],H={graphic:null,property:null,oldValue:null,newValue:null};function I(e){return e instanceof p.Z||e instanceof c.Z||e instanceof g.Z||e instanceof u.Z||e instanceof _.Z||e instanceof w.Z||e instanceof y.Z}const v=new Set(["default"]);let G=class extends((0,f.y)(M.Z)){constructor(){super(...arguments),this._graphics=new h.Z,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new a.Z({getCollections:()=>null==this.layer||this.destroyed?[]:[null!=this.layer.routeInfo?new h.Z([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange((()=>this._routeItems),(e=>this._routeItemsChanged(e)),o.nn)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(e,t){return this._graphicsView.hitTest(e).filter((e=>{let{popupTemplate:t}=e;return!!t}))}highlight(e){let t;t=I(e)?[this._getNetworkFeatureUid(e)]:function(e){return Array.isArray(e)&&e.length>0&&I(e[0])}(e)?e.map((e=>this._getNetworkFeatureUid(e))):function(e){return h.Z.isCollection(e)&&e.length&&I(e.at(0))}(e)?e.map((e=>this._getNetworkFeatureUid(e))).toArray():[e.uid];const i=t.filter(s.pC);return i.length?(this._addHighlight(i),(0,n.kB)((()=>this._removeHighlight(i)))):(0,n.kB)()}async hitTest(e,t){if(this.suspended)return null;const i=this._graphicsView.hitTest(e).filter(s.pC).map((e=>this._networkGraphicMap.get(e)));if(!i.length)return null;const{layer:r}=this;return i.reverse().map((t=>({type:"route",layer:r,mapPoint:e,networkFeature:t})))}isUpdating(){return this._graphicsView.updating}moveEnd(){}update(e){this._graphicsView.processUpdate(e)}viewChange(){this._graphicsView.viewChange()}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_createGraphic(e){const t=e.toGraphic();return t.layer=this.layer,t.sourceLayer=this.layer,t}_createGraphicsView(){const e=this.view,t=new m.Z(e.featuresTilingScheme);this._graphicsView=new k.Z({container:t,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),view:e}),this.container.addChild(t),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(e){const t=this._networkGraphicMap.get(e);return C.indexOf(t.type)}_getNetworkFeatureUid(e){return this._networkFeatureMap.has(e)?this._networkFeatureMap.get(e).uid:null}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_routeItemsChanged(e){if(e.removed.length){this._graphics.removeMany(e.removed.map((e=>{const t=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(t),t})));for(const t of e.removed)this.removeHandles(t)}if(e.added.length){this._graphics.addMany(e.added.map((e=>{const t=this._createGraphic(e);return null==t.symbol?null:(this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),t)})).filter(s.pC));for(const t of e.added)this.addHandles([(0,o.YP)((()=>t.geometry),((e,i)=>{this._updateGraphic(t,"geometry",e,i)})),(0,o.YP)((()=>t.symbol),((e,i)=>{this._updateGraphic(t,"symbol",e,i)}))],t);this._graphics.sort(((e,t)=>this._getDrawOrder(e)-this._getDrawOrder(t)))}}_updateGraphic(e,t,i,r){if(!this._networkFeatureMap.has(e)){const t=this._createGraphic(e);return this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),void this._graphics.add(t)}const s=this._networkFeatureMap.get(e);s[t]=i,H.graphic=s,H.property=t,H.oldValue=r,H.newValue=i,this._graphicsView.graphicUpdateHandler(H)}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=this._getHighlightBits(v);this._graphicsView.setHighlight(e.map((e=>({objectId:e,highlightFlags:t}))))}};(0,r._)([(0,l.Cb)()],G.prototype,"_graphics",void 0),(0,r._)([(0,l.Cb)()],G.prototype,"_routeItems",null),G=(0,r._)([(0,d.j)("esri.views.2d.layers.RouteLayerView2D")],G);const V=G},75391:(e,t,i)=>{i.d(t,{Z:()=>a});var r=i(80613),s=i(39444),h=i(39594);class a extends s.K{renderChildren(e){for(const t of this.children)t.setTransform(e.state);if(super.renderChildren(e),this._updateAttributeView(),this.children.some((e=>e.hasData))){switch(e.drawPhase){case r.jx.MAP:this._renderChildren(e,r.Xq.All);break;case r.jx.HIGHLIGHT:this.hasHighlight&&this._renderHighlight(e)}this._boundsRenderer&&this._boundsRenderer.doRender(e)}}_renderHighlight(e){(0,h.P9)(e,!1,(e=>{this._renderChildren(e,r.Xq.Highlight)}))}}}}]);
//# sourceMappingURL=8405.d9e971e9.chunk.js.map