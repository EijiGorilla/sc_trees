"use strict";(self.webpackChunksc_trees=self.webpackChunksc_trees||[]).push([[9583],{19583:(e,r,t)=>{t.r(r),t.d(r,{default:()=>J});var s=t(27366),i=t(76200),a=t(62044),o=t(10064),l=t(93002),n=t(97642),y=t(66978),p=t(49861),h=t(25243),u=(t(84936),t(93169),t(38511)),c=t(69912),m=t(31201),d=t(25265),b=t(53866),g=t(82582),f=t(92975),v=t(30651),S=t(27961),_=t(6741),x=t(11936),I=t(6693),C=t(46671),L=t(6061),O=t(29598),w=t(71684),P=t(56811),E=t(18870),F=t(99063),T=t(70361),N=t(44041),D=t(83690),M=t(77990),R=t(58132),V=t(26704),Z=t(6701);let j=class extends((0,I.h7)((0,F.n)((0,P.M)((0,E.x)((0,_.O)((0,x.Y)((0,L.q)((0,O.I)((0,n.R)((0,w.Q)((0,S.V)((0,C.N)(v.Z))))))))))))){constructor(){super(...arguments),this._exportImageParameters=new N.R({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(y.r9).then((()=>this._fetchService(r)))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((e=>{let{sublayers:r}=e;return r&&r.toArray().reverse()})).toArray();let a=!1;const o=(0,d.M9)(s.origin);if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers)if(o===d.s3.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;a=(0,R.QV)(i,e,d.s3.SERVICE)}else if(o>d.s3.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");a=(0,R.QV)(i,e.sublayers,(0,d.M9)(e.origin))}const l=[],n={writeSublayerStructure:a,...s};let y=a||this.hasVisibleLayersForOrigin(o);i.forEach((e=>{const r=e.write({},n);l.push(r),y=y||"user"===e.originOf("visible")})),l.some((e=>Object.keys(e).length>1))&&(r.layers=l),y&&(r.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,r,t,s){const i=s?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=s?.floors??null,this._exportImageParameters.scale=(0,g.yZ)({extent:e,width:r})*i;const a=this._exportImageParameters.toJSON(),o=!s?.rotation||this.version<10.3?{}:{rotation:-s.rotation},l=e?.spatialReference,n=(0,f.B9)(l);a.dpi*=i;const y={};if(s?.timeExtent){const{start:e,end:r}=s.timeExtent.toJSON();y.time=e&&r&&e===r?""+e:`${e??"null"},${r??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:r+","+t,...a,...o,...y}}async fetchImage(e,r,t,s){const{data:i}=await this._fetchImage("image",e,r,t,s);return i}async fetchImageBitmap(e,r,t,s){const{data:i,url:a}=await this._fetchImage("blob",e,r,t,s);return(0,D.g)(i,a,s?.signal)}async fetchRecomputedExtents(){const e={...arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:r}=await(0,i.Z)(this.url,e),{extent:t,fullExtent:s,timeExtent:o}=r,l=t||s;return{fullExtent:l&&b.Z.fromJSON(l),timeExtent:o&&a.Z.fromJSON({start:o[0],end:o[1]})}}loadAll(){return(0,l.G)(this,(e=>{e(this.allSublayers),e(this.subtables)}))}serviceSupportsSpatialReference(e){return(0,V.D)(this,e)}async _fetchImage(e,r,t,s,a){const l={responseType:e,signal:a?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,t,s,a),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},n=this.parsedUrl.path+"/export";if(null!=l.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new o.Z("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query});try{const{data:e}=await(0,i.Z)(n,l);return{data:e,url:n}}catch(p){if((0,y.D_)(p))throw p;throw new o.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${n}`,{error:p})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:t}=await(0,i.Z)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});t&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(null==e||!this.sublayersSourceJSON[e]?.visibleLayers)}};(0,s._)([(0,p.Cb)((0,Z.mi)("dateFieldsTimeReference"))],j.prototype,"dateFieldsTimeZone",void 0),(0,s._)([(0,p.Cb)({type:Boolean})],j.prototype,"datesInUnknownTimezone",void 0),(0,s._)([(0,p.Cb)()],j.prototype,"dpi",void 0),(0,s._)([(0,p.Cb)()],j.prototype,"gdbVersion",void 0),(0,s._)([(0,p.Cb)()],j.prototype,"imageFormat",void 0),(0,s._)([(0,u.r)("imageFormat",["supportedImageFormatTypes"])],j.prototype,"readImageFormat",null),(0,s._)([(0,p.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],j.prototype,"imageMaxHeight",void 0),(0,s._)([(0,p.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],j.prototype,"imageMaxWidth",void 0),(0,s._)([(0,p.Cb)()],j.prototype,"imageTransparency",void 0),(0,s._)([(0,p.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],j.prototype,"isReference",void 0),(0,s._)([(0,p.Cb)({json:{read:!1,write:!1}})],j.prototype,"labelsVisible",void 0),(0,s._)([(0,p.Cb)({type:["ArcGISMapServiceLayer"]})],j.prototype,"operationalLayerType",void 0),(0,s._)([(0,p.Cb)({json:{read:!1,write:!1}})],j.prototype,"popupEnabled",void 0),(0,s._)([(0,p.Cb)((0,Z.mi)("preferredTimeReference"))],j.prototype,"preferredTimeZone",void 0),(0,s._)([(0,p.Cb)()],j.prototype,"sourceJSON",void 0),(0,s._)([(0,p.Cb)({json:{write:{ignoreOrigin:!0}}})],j.prototype,"sublayers",void 0),(0,s._)([(0,m.c)("sublayers",{layers:{type:[M.Z]},visibleLayers:{type:[h.z8]}})],j.prototype,"writeSublayers",null),(0,s._)([(0,p.Cb)({type:["show","hide","hide-children"]})],j.prototype,"listMode",void 0),(0,s._)([(0,p.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],j.prototype,"type",void 0),(0,s._)([(0,p.Cb)(T.HQ)],j.prototype,"url",void 0),j=(0,s._)([(0,c.j)("esri.layers.MapImageLayer")],j);const J=j},44041:(e,r,t)=>{t.d(r,{R:()=>u});var s=t(27366),i=t(7138),a=t(76672),o=t(49861),l=(t(93169),t(32718),t(84936),t(69912)),n=t(82582),y=t(87072),p=t(58132);const h={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let u=class extends i.Z{constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>{const r=(0,y.f)(this.floors,e);return e.toExportImageJSON(r)}));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&(0,p.FN)(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.removeHandles("layer"),e&&this.addHandles([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(h[e.propertyName])))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){const e=!!this.floors?.length,r=this.visibleSublayers.filter((r=>null!=r.definitionExpression||e&&null!=r.floorInfo));return r.length?JSON.stringify(r.reduce(((e,r)=>{const t=(0,y.f)(this.floors,r),s=(0,a._)(t,r.definitionExpression);return null!=s&&(e[r.id]=s),e}),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const r=this.layer.sublayers,t=this.scale,s=r=>{r.visible&&(0===t||(0,n.o2)(t,r.minScale,r.maxScale))&&(r.sublayers?r.sublayers.forEach(s):e.unshift(r))};r&&r.forEach(s);const i=this._get("visibleSublayers");return!i||i.length!==e.length||i.some(((r,t)=>e[t]!==r))?e:i}toJSON(){const e=this.layer;let r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r={...r,layers:this.layers,layerDefs:this.layerDefs},r}};(0,s._)([(0,o.Cb)({readOnly:!0})],u.prototype,"dynamicLayers",null),(0,s._)([(0,o.Cb)()],u.prototype,"floors",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],u.prototype,"hasDynamicLayers",null),(0,s._)([(0,o.Cb)()],u.prototype,"layer",null),(0,s._)([(0,o.Cb)({readOnly:!0})],u.prototype,"layers",null),(0,s._)([(0,o.Cb)({readOnly:!0})],u.prototype,"layerDefs",null),(0,s._)([(0,o.Cb)({type:Number})],u.prototype,"scale",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],u.prototype,"version",null),(0,s._)([(0,o.Cb)({readOnly:!0})],u.prototype,"visibleSublayers",null),u=(0,s._)([(0,l.j)("esri.layers.support.ExportImageParameters")],u)},87072:(e,r,t)=>{function s(e){const r=e.layer;return"floorInfo"in r&&r.floorInfo?.floorField&&"floors"in e.view?a(e.view.floors,r.floorInfo.floorField):null}function i(e,r){return"floorInfo"in r&&r.floorInfo?.floorField?a(e,r.floorInfo.floorField):null}function a(e,r){if(!e?.length)return null;const t=e.filter((e=>""!==e)).map((e=>`'${e}'`));return t.push("''"),`${r} IN (${t.join(",")}) OR ${r} IS NULL`}t.d(r,{c:()=>s,f:()=>i})}}]);
//# sourceMappingURL=9583.8fa2a682.chunk.js.map