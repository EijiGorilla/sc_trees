"use strict";(self.webpackChunksc_trees=self.webpackChunksc_trees||[]).push([[5972],{25889:(e,s,t)=>{t.d(s,{AC:()=>c,Fz:()=>p,Q_:()=>g,_C:()=>u,fB:()=>d,i1:()=>h,jO:()=>f,kE:()=>l,ks:()=>i,s8:()=>m,sc:()=>a});var o=t(10064);const r="upload-assets",n=()=>new Error;class a extends o.Z{constructor(){super(`${r}:unsupported`,"Layer does not support asset uploads.",n())}}class i extends o.Z{constructor(){super(`${r}:no-glb-support`,"Layer does not support glb.",n())}}class l extends o.Z{constructor(){super(`${r}:no-supported-source`,"No supported external source found",n())}}class c extends o.Z{constructor(){super(`${r}:not-base-64`,"Expected gltf data in base64 format after conversion.",n())}}class u extends o.Z{constructor(){super(`${r}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",n())}}class p extends o.Z{constructor(e,s){super(`${r}:bad-response`,`Bad response. Uploaded ${e} items and received ${s} results.`,n())}}class d extends o.Z{constructor(e,s){super(`${r}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${s?.code??"-1"}. Error message: ${s?.messages??"unknown"}`,n())}}class f extends o.Z{constructor(e){super(`${r}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,n())}}class m extends o.Z{constructor(){super(`${r}:convert3D-failed`,"convert3D failed.")}}class g extends o.Z{constructor(){super("invalid-input:no-model","No supported model found")}}class h extends o.Z{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},15972:(e,s,t)=>{t.d(s,{uploadAssets:()=>$});t(59486);var o=t(76200),r=t(93169),n=t(32718),a=t(66978),i=t(38499),l=t(35995),c=t(71907),u=t(17493),p=t(25889);const d={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var f=t(25899),m=t(42537),g=t(77427);function h(e){return new w(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class w{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},t=arguments.length>2?arguments[2]:void 0;if(this.onProgress=s,this.taskName=t,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const t=s,o=1/e;this._weights[t]=o,this._progressMap.set(t,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[s,t]of this._progressMap.entries())e+=t*this._weights[s];if(1===e&&(0,r.Z)("enable-feature:esri-3dofl-upload-timings")){const e=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${e} sec`);for(const[s,t]of this._timingsMap){const o=Math.round(t.end-t.start)/1e3,r=Math.round(o/e*100);console.log(this.taskName??"Task",{stepKey:s,stepTime:o,relativeTime:r})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,r.Z)("enable-feature:esri-3dofl-upload-timings")){const t=performance.now();this._startTime??=t;const o=(0,g.s1)(this._timingsMap,e,(()=>({start:t,end:0})));1===s&&(o.end=t)}this.emitProgress()}simulate(e,s){return y((s=>this.setProgress(e,s)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:k;const t=performance.now();e(0);const o=setInterval((()=>{const o=performance.now()-t,r=1-Math.exp(-o/s);e(r)}),Z);return(0,m.kB)((()=>{clearInterval(o),e(1)}))}function v(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b;return(0,i.up)((0,i._H)(e*P/s))}const b=10,_=10,P=8e-6,Z=(0,i.HA)(50),k=(0,i.HA)(1e3),A=1e6,T=20*A,x=2e9,E=3;async function F(e,s,t){let{data:r,name:n,description:i}=e,c=null;try{const e=(0,l.v_)(s,"uploads"),p=(0,l.v_)(e,"info"),{data:d}=await(0,o.Z)(p,{query:{f:"json"},responseType:"json"});(0,a.k_)(t);const m=(0,f.M8)(s),g=d.maxUploadFileSize*A,w=m?x:g,y=m?Math.min(T,g):T;if(r.size>w)throw new Error("Data too large");const b=(0,l.v_)(e,"register"),{data:_}=await(0,o.Z)(b,{query:{f:"json",itemName:(u=n,u.replaceAll("/","_").replaceAll("\\","_")),description:i},responseType:"json",method:"post"});if((0,a.k_)(t),!_.success)throw new Error("Registration failed");const{itemID:P}=_.item;c=(0,l.v_)(e,P);const Z=(0,l.v_)(c,"uploadPart"),k=Math.ceil(r.size/y),F=new Array;for(let s=0;s<k;++s)F.push(r.slice(s*y,Math.min((s+1)*y,r.size)));const j=F.slice().reverse(),C=new Array,D=h(k,t?.onProgress,"uploadItem"),M=async()=>{for(;0!==j.length;){const e=F.length-j.length,s=j.pop(),r=new FormData,n=D.simulate(e,v(s.size));try{r.append("f","json"),r.append("file",s),r.append("partId",`${e}`);const{data:n}=await(0,o.Z)(Z,{timeout:0,body:r,responseType:"json",method:"post"});if((0,a.k_)(t),!n.success)throw new Error("Part upload failed")}finally{n.remove()}}};for(let s=0;s<E&&0!==j.length;++s)C.push(M());await Promise.all(C);const $=(0,l.v_)(c,"commit"),{data:S}=await(0,o.Z)($,{query:{f:"json",parts:F.map(((e,s)=>s)).join(",")},responseType:"json",method:"post"});if((0,a.k_)(t),!S.success)throw new Error("Commit failed");return S.item}catch(p){if(null!=c){const e=(0,l.v_)(c,"delete");await(0,o.Z)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw p}var u}var j=t(18277),C=t(5559),D=t(25219),M=t(78952);async function $(e,s,t){const o=e.length;if(!o)return t?.onProgress?.(1),[];const n=h(o,t?.onProgress,"uploadAssets");return Promise.all(e.map(((e,o)=>async function(e,s,t){let{layer:o,ongoingUploads:n}=s;const f=n.get(e);if(f)return f;if(!function(e){return!!e.infoFor3D&&!!e.url}(o))throw new p.sc;if(function(e,s){const{parsedUrl:t}=s;return null!=t&&e.metadata.externalSources.some((e=>(0,u.JG)(e,t)))}(e,o))return t?.onProgress?.(1),e;const m=async function(e,s,t){const{metadata:o}=e,{displaySource:n}=o,f=S(n?.source,s,{checkForConversionRequired:(0,r.Z)("enable-feature:georeferenced-uploads")}),m=null!=f?async function(e,s,t){return{source:await I(e,s,t),original:!0,unitConversionDisabled:!0}}(f,s,t):o.externalSources.length>0?async function(e,s,t){const o=L(s),{externalSources:n}=e.metadata,a=function(e,s){for(const t of e){const e=S(t.source,s);if(e)return e}return null}(n,s);if(!a)throw new p.kE;const c=h(d.uploadConvertibleSource,t?.onProgress,"uploadConvertibleSource"),f=await I(a,s,{onProgress:c.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:f,original:!0}]);const m=a.reduce(((e,s)=>{let{asset:t}=s;return t instanceof File?e+t.size:e}),0),g=c.simulate("serviceAssetsToGlb",function(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_;return(0,i.up)((0,i._H)(e*P/s))}(m));try{const{source:n,transform:a,origin:i}=await async function(e,s,t){const o=e.map((e=>{let{assetName:s,parts:t}=e;return{assetName:s,assetHash:t[0].partHash}}));let n;try{const e=(0,l.v_)(s.parsedUrl.path,"convert3D"),r=s.capabilities?.operations.supportsAsyncConvert3D;n=(await(r?U:B)(e,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:t,async:r},responseType:"json",timeout:0})).data}catch(a){throw new p.s8}return function(e,s){const t={source:s.assets.map((s=>{const t=(0,j.S0)(s.contentType,e.infoFor3D.supportedFormats);if(!t)throw new p.jO(t);return new u.CP(s.assetName,s.contentType,[new u.LL(s.assetURL,s.assetHash)])})),origin:void 0,transform:void 0};if((0,r.Z)("enable-feature:georeferenced-uploads")&&s.transform){if(t.transform=(0,D.E)(s.transform),s.spatialReference){const e=M.Z.fromJSON(s.spatialReference);t.origin=(0,D.A)(s.transform,e)}}else t.transform=(0,C.c)(e.spatialReference);return t}(s,n)}(f,s,o);return e.transform=a,i&&(e.metadata.georeferenced=!0,t?.useAssetOrigin&&(e.vertexSpace.origin=[i.x,i.y,i.z??0],e.spatialReference=i.spatialReference)),{source:n,unitConversionDisabled:!0}}finally{g.remove()}}(e,s,t):async function(e,s,t){const o=h(d.uploadLocalMesh,t?.onProgress,"uploadLocalMesh"),r=async function(e,s,t){const o=L(s),r=await e.load(t),n=await r.toBinaryGLTF({origin:r.origin,signal:t?.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return(0,a.k_)(t),{blob:new Blob([n],{type:"model/gltf-binary"}),assetName:`${(0,c.zS)()}.glb`,assetType:o}}(e,s,{...t,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await R([r],s,{...t,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,s,t),g=await m;return(0,a.k_)(t),e.addExternalSources([g]),e}(e,o,t);n.set(e,m);try{await m}finally{n.delete(e)}return e}(e,s,{...t,onProgress:n.makeOnProgress(o)}))))}function S(e,s){let{infoFor3D:t}=s,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)return null;const{supportedFormats:r,editFormats:n}=t,a=(0,u.zE)(e),i=new Array,l=(0,j.Wr)(t),c=(0,j.sg)(t);let p=!1;for(const u of a){const e=N(u,r);if(!e)return null;const{assetType:s}=e;if(o.checkForConversionRequired&&(s===l||s===c))return null;n.includes(s)&&(p=!0),i.push(e)}return p?i:null}function N(e,s){const t=(0,u.vj)(e,s);return t?{asset:e,assetType:t}:null}async function I(e,s,t){return R(e.map((e=>async function(e,s){const{asset:t,assetType:o}=e;if(t instanceof File)return{blob:t,assetName:t.name,assetType:o};const r=await t.toBlob(s);return(0,a.k_)(s),{blob:r,assetName:t.assetName,assetType:o}}(e,t))),s,t)}async function R(e,s,t){const o=h(d.uploadAssetBlobs,t?.onProgress,"uploadAssetBlobs"),r=await function(e,s,t){const o=h(e.length,t?.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,r)=>{const i=async function(e,s,t){const{blob:o,assetType:r,assetName:i}=e;let c=null;try{const e=await F({data:o,name:i},s.url,t);(0,a.k_)(t),c={assetType:r,assetUploadId:e.itemID}}catch(k){(0,a.r9)(k),n.Z.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${s.url} does not support the REST Uploads API.`)}if(!c){const e=await(0,l.IR)(o);if((0,a.k_)(t),!e.isBase64)throw new p.AC;c={assetType:r,assetData:e.data}}if(!c)throw new p._C;return{item:c,assetName:i}}(await e,s,{...t,onProgress:o.makeOnProgress(r)});return(0,a.k_)(t),i})))}(e,s,{...t,onProgress:o.makeOnProgress("prepareAssetItems")});(0,a.k_)(t);const i=r.map((e=>{let{item:s}=e;return s})),{uploadResults:c}=await O(i,s,{...t,onProgress:o.makeOnProgress("uploadAssetItems")});return(0,a.k_)(t),e.map(((e,t)=>function(e,s,t){const{success:o}=s;if(!o){const{error:t}=s;throw new p.fB(e.assetName,t)}const{assetHash:r}=s,{assetName:n,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=t,l=(0,j.d1)(a,i);if(!l)throw new p.jO(a);return new u.CP(n,l,[new u.LL(`${t.parsedUrl.path}/assets/${r}`,r)])}(r[t],c[t],s)))}async function O(e,s,t){const r=y(t?.onProgress);try{const r=await(0,o.Z)((0,l.v_)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.k_)(t),r.data.uploadResults.length!==e.length)throw new p.Fz(e.length,r.data.uploadResults.length);return r.data}finally{r.remove()}}function B(e,s){return(0,o.Z)(e,s)}async function U(e,s){const t=(await(0,o.Z)(e,s)).data.statusUrl;for(;;){const e=(await(0,o.Z)(t,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,o.Z)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.e4)(X)}}function L(e){let{infoFor3D:s}=e;const t=(0,j.X4)(s);if(!t)throw new p.ks;return t}const X=(0,i.HA)(1e3)},5559:(e,s,t)=>{t.d(s,{c:()=>n});var o=t(68860),r=t(76046);function n(e){const s=1/(0,o.c9)(e,1);return 1!==s?new r.Z({scale:[s,s,s]}):void 0}},25219:(e,s,t)=>{t.d(s,{A:()=>n,E:()=>a});t(59486);var o=t(76046),r=t(848);function n(e,s){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i;return new r.Z({x:e[t.originX],y:e[t.originY],z:e[t.originZ],spatialReference:s})}function a(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return new o.Z({translation:[e[s.translationX],-e[s.translationZ],e[s.translationY]],rotationAxis:[e[s.rotationX],-e[s.rotationZ],e[s.rotationY]],rotationAngle:e[s.rotationDeg],scale:[e[s.scaleX],e[s.scaleZ],e[s.scaleY]]})}const i={originX:"originX",originY:"originY",originZ:"originZ",translationX:"translationX",translationY:"translationY",translationZ:"translationZ",scaleX:"scaleX",scaleY:"scaleY",scaleZ:"scaleZ",rotationX:"rotationX",rotationY:"rotationY",rotationZ:"rotationZ",rotationDeg:"rotationDeg"}}}]);
//# sourceMappingURL=5972.dbe0f479.chunk.js.map