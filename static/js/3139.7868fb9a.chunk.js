"use strict";(self.webpackChunksc_trees=self.webpackChunksc_trees||[]).push([[3139],{28458:(e,a,t)=>{t.d(a,{L:()=>n});var r=t(41226);class n{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,a){const t=this._serviceMetadatas.get(e);if(t)return t;const n=await(0,r.T)(e,a);return this._serviceMetadatas.set(e,n),n}async fetchItemData(e){const{id:a}=e;if(!a)return null;const{_itemDatas:t}=this;if(t.has(a))return t.get(a);const r=await e.fetchData();return t.set(a,r),r}async fetchCustomParameters(e,a){const t=await this.fetchItemData(e);return t&&"object"==typeof t&&(a?a(t):t.customParameters)||null}}},84076:(e,a,t)=>{t.d(a,{w:()=>o});var r=t(19545),n=t(76200),s=t(10064),c=t(66978),i=t(25899),l=t(7575),u=t(98995);async function o(e,a){const t=(0,i.Qc)(e);if(!t)throw new s.Z("invalid-url","Invalid scene service url");const o={...a,sceneServerUrl:t.url.path,layerId:t.sublayer??void 0};if(o.sceneLayerItem??=await async function(e){const a=(await y(e)).serviceItemId;if(!a)return null;const t=new u.default({id:a,apiKey:e.apiKey}),s=await async function(e){const a=r.id?.findServerInfo(e.sceneServerUrl);if(a?.owningSystemUrl)return a.owningSystemUrl;const t=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const a=(await(0,n.Z)(t,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(a)return a}catch(m){(0,c.r9)(m)}return null}(e);null!=s&&(t.portal=new l.Z({url:s}));try{return await t.load({signal:e.signal})}catch(d){return(0,c.r9)(d),null}}(o),null==o.sceneLayerItem)return f(o.sceneServerUrl.replace("/SceneServer","/FeatureServer"),o);const m=await async function(e){let{sceneLayerItem:a,signal:t}=e;if(!a)return null;try{const e=(await a.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:t})).find((e=>"Feature Service"===e.type))||null;if(!e)return null;const r=new u.default({portal:e.portal,id:e.id});return await r.load(),r}catch(r){return(0,c.r9)(r),null}}(o);if(!m?.url)throw new s.Z("related-service-not-found","Could not find feature service through portal item relationship");o.featureServiceItem=m;const d=await f(m.url,o);return d.portalItem=m,d}async function y(e){if(e.rootDocument)return e.rootDocument;const a={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const t=await(0,n.Z)(e.sceneServerUrl,a);e.rootDocument=t.data}catch{e.rootDocument={}}return e.rootDocument}async function f(e,a){const t=(0,i.Qc)(e);if(!t)throw new s.Z("invalid-feature-service-url","Invalid feature service url");const r=t.url.path,c=a.layerId;if(null==c)return{serverUrl:r};const l=y(a),u=a.featureServiceItem?await a.featureServiceItem.fetchData("json"):null,o=(u?.layers?.[0]||u?.tables?.[0])?.customParameters,f=e=>{const t={query:{f:"json",...o},responseType:"json",authMode:e,signal:a.signal};return(0,n.Z)(r,t)},m=f("anonymous").catch((()=>f("no-prompt"))),[d,p]=await Promise.all([m,l]),w=p?.layers,h=d.data&&d.data.layers;if(!Array.isArray(h))throw new Error("expected layers array");if(Array.isArray(w)){for(let n=0;n<Math.min(w.length,h.length);n++)if(w[n].id===c)return{serverUrl:r,layerId:h[n].id}}else if(null!=c&&c<h.length)return{serverUrl:r,layerId:h[c].id};throw new Error("could not find matching associated sublayer")}},74368:(e,a,t)=>{t.d(a,{V:()=>s,W:()=>f});var r=t(41226);const n=new Set(["Catalog Layer","Feature Layer","Oriented Imagery Layer"]);async function s(e,a){const{loadContext:t,...n}=a||{},s=t?await t.fetchServiceMetadata(e,n):await(0,r.T)(e,n);y(s),l(s);const c={serviceJSON:s};if((s.currentVersion??0)<10.5)return c;const i=`${e}/layers`,u=t?await t.fetchServiceMetadata(i,n):await(0,r.T)(i,n);return y(u),l(u),c.layersJSON={layers:u.layers,tables:u.tables},c}function c(e){const{type:a}=e;return!!a&&n.has(a)}function i(e){return"Table"===e.type}function l(e){e.layers=e.layers?.filter(c),e.tables=e.tables?.filter(i)}function u(e){e.type||="Feature Layer"}function o(e){e.type||="Table"}function y(e){e.layers?.forEach(u),e.tables?.forEach(o)}function f(e){switch(e){case"Feature Layer":case"Table":return"FeatureLayer";case"Oriented Imagery Layer":return"OrientedImageryLayer";case"Catalog Layer":return"CatalogLayer"}return"FeatureLayer"}},97827:(e,a,t)=>{t.d(a,{$O:()=>c,CD:()=>m,Q4:()=>o,ZC:()=>y,bS:()=>s,hq:()=>l,qT:()=>f,r9:()=>u,uE:()=>i});var r=t(84076),n=t(74368);function s(e){const a={id:e.id,name:e.name},t=(0,n.W)(e.type);return"FeatureLayer"!==t&&(a.layerType=t),a}async function c(e,a,t){if(null==e?.layers||null==e?.tables){const r=await t.fetchServiceMetadata(a,{customParameters:i(e)?.customParameters});(e=e||{}).layers=e.layers||r?.layers?.map(s),e.tables=e.tables||r?.tables?.map(s)}return e}function i(e){if(!e)return null;const{layers:a,tables:t}=e;return a?.length?a[0]:t?.length?t[0]:null}function l(e,a){return null==a?null:[...e.layers||[],...e.tables||[]].find((e=>e.id===a))}function u(e,a){return[...e.layers||[],...e.tables||[]].filter((e=>{let{layerType:t}=e;return t?t===a:"ArcGISFeatureLayer"===a}))}function o(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function y(e){switch(e){case"catalog":return"CatalogLayer";case"feature":return"ArcGISFeatureLayer";case"oriented-imagery":return"OrientedImageryLayer";case"subtype-group":return"SubtypeGroupLayer"}return null}function f(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":return"SubtypeGroupLayer"}return"FeatureLayer"}async function m(e,a,t){if(!e?.url)return a??{};if(a??={},!a.layers){const r=await t.fetchServiceMetadata(e.url);a.layers=r.layers?.map(s)}const{serverUrl:n,portalItem:c}=await(0,r.w)(e.url,{sceneLayerItem:e,customParameters:i(a)?.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==n)return a.tables=[],a;if(!a.tables&&c){const e=await c.fetchData().catch((()=>null));if(e?.tables)a.tables=e.tables.map(s);else{const r=await t.fetchServiceMetadata(n,{customParameters:i(e)?.customParameters}).catch((()=>null));a.tables=r?.tables?.map(s)}}if(a.tables)for(const r of a.tables)r.url=`${n}/${r.id}`;return a}},43139:(e,a,t)=>{t.d(a,{fromItem:()=>f,v:()=>m});var r=t(10064),n=t(84076),s=t(74368),c=t(28458),i=t(37933),l=t(19610),u=t(98995),o=t(97827),y=t(73117);async function f(e){let{portalItem:a}=e;!a||a instanceof u.default||(a=new u.default(a));const t=await async function(e){await e.load();const a=new c.L;return async function(e){const a=e.className,t=l.T[a];return{constructor:await t(),properties:e.properties}}(await m(e,a))}(a);return new(0,t.constructor)({portalItem:a,...t.properties})}async function m(e,a){switch(e.type){case"3DTiles Service":return{className:"IntegratedMesh3DTilesLayer"};case"CSV":return{className:"CSVLayer"};case"Feature Collection":return async function(e){await e.load();const a=(0,y._$)(e,"Map Notes"),t=(0,y._$)(e,"Markup");if(a||t)return{className:"MapNotesLayer"};if((0,y._$)(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return 1===(0,o.Q4)(r)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Feature Service":return async function(e,a){const t=await d(e,a);if("object"==typeof t){const{sourceJSON:e,className:a}=t,r={sourceJSON:e};return null!=t.id&&(r.layerId=t.id),{className:a||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}(e,a);case"Feed":case"Stream Service":return{className:"StreamLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"Group Layer":return{className:"GroupLayer"};case"Image Service":return async function(e,a){await e.load();const t=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await a.fetchItemData(e),n=r?.layerType;if("ArcGISTiledImageServiceLayer"===n)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===n)return{className:"ImageryLayer"};const s=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),c=s.cacheType?.toLowerCase(),i=s.capabilities?.toLowerCase().includes("tilesonly"),l=s.tileInfo?.format?.toLowerCase()??"",u=null==c&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(l);return"map"===c||u||i?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e,a);case"KML":return{className:"KMLLayer"};case"Knowledge Graph Layer":return{className:"KnowledgeGraphLayer"};case"Map Service":return async function(e,a){return await async function(e,a){const{tileInfo:t}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return t}(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}(e,a);case"Media Layer":return{className:"MediaLayer"};case"Scene Service":return async function(e,a){const t=await d(e,a,(async()=>{try{if(!e.url)return[];const{serverUrl:t}=await(0,n.w)(e.url,{sceneLayerItem:e}),r=await a.fetchServiceMetadata(t);return r?.tables??[]}catch{return[]}}));if("object"==typeof t){const r={};let n;if(null!=t.id?(r.layerId=t.id,n=`${e.url}/layers/${t.id}`):n=e.url,e.typeKeywords?.length)for(const a of Object.keys(i.fb))if(e.typeKeywords.includes(a))return{className:i.fb[a]};const s=await a.fetchServiceMetadata(n,{customParameters:await a.fetchCustomParameters(e,(e=>(0,o.uE)(e)?.customParameters))});return{className:i.fb[s?.layerType]||"SceneLayer",properties:r}}if(!1===t){const t=await a.fetchServiceMetadata(e.url);if("Voxel"===t?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(e,a);case"Vector Tile Service":return{className:"VectorTileLayer"};case"WFS":return{className:"WFSLayer"};case"WMS":return{className:"WMSLayer"};case"WMTS":return{className:"WMTSLayer"};default:throw new r.Z("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function d(e,a,t){const{url:r,type:n}=e,c="Feature Service"===n;if(!r)return{};if(/\/\d+$/.test(r)){if(c){const t=await a.fetchServiceMetadata(r,{customParameters:await a.fetchCustomParameters(e,(e=>(0,o.uE)(e)?.customParameters))});return{id:t.id,className:(0,s.W)(t.type),sourceJSON:t}}return{}}await e.load();let i=await a.fetchItemData(e);if(c){const e=await(0,o.$O)(i,r,a),t=p(e);if("object"==typeof t){const a=(0,o.hq)(e,t.id);t.className=(0,o.qT)(a?.layerType)}return t}if("Scene Service"===n&&(i=await(0,o.CD)(e,i,a)),(0,o.Q4)(i)>0)return p(i);const l=await a.fetchServiceMetadata(r);return t&&(l.tables=await t()),p(l)}function p(e){return 1===(0,o.Q4)(e)&&{id:(0,o.uE)(e)?.id}}},41226:(e,a,t)=>{t.d(a,{T:()=>n});var r=t(76200);async function n(e,a){const{data:t}=await(0,r.Z)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return t}}}]);
//# sourceMappingURL=3139.7868fb9a.chunk.js.map