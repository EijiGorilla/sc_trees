"use strict";(self.webpackChunksc_trees=self.webpackChunksc_trees||[]).push([[387],{85981:(e,t,n)=>{n.d(t,{Ue:()=>d,nF:()=>c,zk:()=>a});var o=n(16889),i=n(21530),s=n(11186),r=n(71353),h=n(51378);function d(e){return e?{origin:(0,r.g)(e.origin),vector:(0,r.g)(e.vector)}:{origin:(0,r.c)(),vector:(0,r.c)()}}function a(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:d();return(0,s.c)(n.origin,e),(0,s.f)(n.vector,t,e),n}function c(e,t,n){return function(e,t,n,i,r){const{vector:d,origin:a}=e,c=(0,s.f)(h.WM.get(),t,a),u=(0,s.j)(d,c)/(0,s.m)(d);return(0,s.i)(r,d,(0,o.uZ)(u,n,i)),(0,s.g)(r,r,e.origin)}(e,t,0,1,n)}(0,r.c)(),(0,r.c)(),new i.x((()=>d()))},10387:(e,t,n)=>{n.r(t),n.d(t,{default:()=>X});var o=n(27366),i=n(66978),s=(n(32718),n(25243),n(63780),n(93169),n(10064),n(69912)),r=n(11186),h=n(71353),d=n(85981),a=n(23470),c=n(13005),u=n(26380),l=n(21530),_=(n(14226),n(90045),n(67077)),f=n(40885);function m(e){return e?{ray:(0,f.Ue)(e.ray),c0:e.c0,c1:e.c1}:{ray:(0,f.Ue)(),c0:0,c1:Number.MAX_VALUE}}new l.x((()=>m()));var T,g;n(76146),n(51378);function p(e,t){for(let n=0;n<O;n++){const o=e[n];if(o[0]*t[0]+o[1]*t[1]+o[2]*t[2]+o[3]>=t[3])return!1}return!0}!function(e){e[e.LEFT=0]="LEFT",e[e.RIGHT=1]="RIGHT",e[e.BOTTOM=2]="BOTTOM",e[e.TOP=3]="TOP",e[e.NEAR=4]="NEAR",e[e.FAR=5]="FAR"}(T||(T={})),function(e){e[e.NEAR_BOTTOM_LEFT=0]="NEAR_BOTTOM_LEFT",e[e.NEAR_BOTTOM_RIGHT=1]="NEAR_BOTTOM_RIGHT",e[e.NEAR_TOP_RIGHT=2]="NEAR_TOP_RIGHT",e[e.NEAR_TOP_LEFT=3]="NEAR_TOP_LEFT",e[e.FAR_BOTTOM_LEFT=4]="FAR_BOTTOM_LEFT",e[e.FAR_BOTTOM_RIGHT=5]="FAR_BOTTOM_RIGHT",e[e.FAR_TOP_RIGHT=6]="FAR_TOP_RIGHT",e[e.FAR_TOP_LEFT=7]="FAR_TOP_LEFT"}(g||(g={}));g.FAR_BOTTOM_RIGHT,g.NEAR_BOTTOM_RIGHT,g.NEAR_BOTTOM_LEFT,g.FAR_BOTTOM_LEFT,g.NEAR_BOTTOM_LEFT,g.NEAR_BOTTOM_RIGHT,g.NEAR_TOP_RIGHT,g.NEAR_TOP_LEFT,g.FAR_BOTTOM_RIGHT,g.FAR_BOTTOM_LEFT,g.FAR_TOP_LEFT,g.FAR_TOP_RIGHT,g.NEAR_BOTTOM_RIGHT,g.FAR_BOTTOM_RIGHT,g.FAR_TOP_RIGHT,g.NEAR_TOP_RIGHT,g.FAR_BOTTOM_LEFT,g.NEAR_BOTTOM_LEFT,g.NEAR_TOP_LEFT,g.FAR_TOP_LEFT,g.FAR_TOP_LEFT,g.NEAR_TOP_LEFT,g.NEAR_TOP_RIGHT,g.FAR_TOP_RIGHT;const O=6;(0,_.f)(-1,-1,-1,1),(0,_.f)(1,-1,-1,1),(0,_.f)(1,1,-1,1),(0,_.f)(-1,1,-1,1),(0,_.f)(-1,-1,1,1),(0,_.f)(1,-1,1,1),(0,_.f)(1,1,1,1),(0,_.f)(-1,1,1,1),new l.x(m),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)();var b=n(97731);class R{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(e,t){this.objectToBoundingSphere=e,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new E,this._objectCount=0,t&&(void 0!==t.maximumObjectsPerNode&&(this._maximumObjectsPerNode=t.maximumObjectsPerNode),void 0!==t.maximumDepth&&(this._maximumDepth=t.maximumDepth))}destroy(){this._degenerateObjects.clear(),E.clearPool(),L[0]=null,D.prune(),V.prune()}add(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;this._objectCount+=t,this._grow(e,t);const n=E.acquire();for(let o=0;o<t;o++){const t=e[o];this._isDegenerate(t)?this._degenerateObjects.add(t):(n.init(this._root),this._add(t,n))}E.release(n)}remove(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._objectCount-=e.length;const n=E.acquire();for(const o of e){const e=null!=t?t:(0,a.h)(this.objectToBoundingSphere(o),H);M(e[3])?(n.init(this._root),this._remove(o,e,n)):this._degenerateObjects.delete(o)}E.release(n),this._shrink()}update(e,t){if(!M(t[3])&&this._isDegenerate(e))return;const n=function(e){return L[0]=e,L}(e);this.remove(n,t),this.add(n)}forEachAlongRay(e,t,n){const o=(0,f.re)(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNode(o,e))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),!0}))}forEachAlongRayWithVerticalOffset(e,t,n,o){const i=(0,f.re)(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNodeWithOffset(i,e,o))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObjectWithOffset(i,e,o)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObjectWithOffset(i,e,o)&&n(e)})),!0}))}forEach(e){this._forEachNode(this._root,(t=>{const n=t.node;return n.terminals.forAll(e),null!==n.residents&&n.residents.forAll(e),!0})),this._degenerateObjects.forEach(e)}forEachDegenerateObject(e){this._degenerateObjects.forEach(e)}findClosest(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1/0,s=1/0,h=1/0,d=null;const c=x(e,t),u=r=>{if(--i,!o(r))return;const c=this.objectToBoundingSphere(r);if(!p(n,c))return;const u=j(e,t,(0,a.g)(c)),l=u-c[3],_=u+c[3];l<s&&(s=l,h=_,d=r)};return this._forEachNodeDepthOrdered(this._root,(o=>{if(i<=0||!p(n,o.bounds))return!1;if((0,r.i)(I,c,o.halfSize),(0,r.g)(I,I,o.bounds),j(e,t,I)>h)return!1;const s=o.node;return s.terminals.forAll((e=>u(e))),null!==s.residents&&s.residents.forAll((e=>u(e))),!0}),e,t),d}forEachInDepthRange(e,t,n,o,i,s,h){let d=-1/0,c=1/0;const u={setRange:e=>{n===R.DepthOrder.FRONT_TO_BACK?(d=Math.max(d,e.near),c=Math.min(c,e.far)):(d=Math.max(d,-e.far),c=Math.min(c,-e.near))}};u.setRange(o);const l=j(t,n,e),_=x(t,n),f=x(t,-n),m=e=>{if(!h(e))return;const o=this.objectToBoundingSphere(e),r=(0,a.g)(o),_=j(t,n,r)-l,f=_-o[3],m=_+o[3];f>c||m<d||!p(s,o)||i(e,u)};this._forEachNodeDepthOrdered(this._root,(e=>{if(!p(s,e.bounds))return!1;if((0,r.i)(I,_,e.halfSize),(0,r.g)(I,I,e.bounds),j(t,n,I)-l>c)return!1;if((0,r.i)(I,f,e.halfSize),(0,r.g)(I,I,e.bounds),j(t,n,I)-l<d)return!1;const o=e.node;return o.terminals.forAll((e=>m(e))),null!==o.residents&&o.residents.forAll((e=>m(e))),!0}),t,n)}forEachNode(e){this._forEachNode(this._root,(t=>e(t.node,t.bounds,t.halfSize,t.depth)))}forEachNeighbor(e,t){const n=(0,a.a)(t),o=(0,a.g)(t),i=t=>{const i=this.objectToBoundingSphere(t),s=(0,a.a)(i),h=n+s;return!((0,r.a)((0,a.g)(i),o)-h*h<=0)||e(t)};let s=!0;const h=e=>{s&&(s=i(e))};this._forEachNode(this._root,(e=>{const t=(0,a.a)(e.bounds),i=n+t;if((0,r.a)((0,a.g)(e.bounds),o)-i*i>0)return!1;const d=e.node;return d.terminals.forAll(h),s&&null!==d.residents&&d.residents.forAll(h),s})),s&&this.forEachDegenerateObject(h)}_intersectsNode(e,t){return F(t.bounds,2*-t.halfSize,C),F(t.bounds,2*t.halfSize,w),(0,b.yK)(e.origin,e.direction,C,w)}_intersectsNodeWithOffset(e,t,n){return F(t.bounds,2*-t.halfSize,C),F(t.bounds,2*t.halfSize,w),n.applyToMinMax(C,w),(0,b.yK)(e.origin,e.direction,C,w)}_intersectsObject(e,t){const n=this.objectToBoundingSphere(t);return!(n[3]>0)||(0,a.j)(n,e)}_intersectsObjectWithOffset(e,t,n){const o=this.objectToBoundingSphere(t);return!(o[3]>0)||(0,a.j)(n.applyToBoundingSphere(o),e)}_forEachNode(e,t){let n=E.acquire().init(e);const o=[n];for(;0!==o.length;){if(n=o.pop(),t(n)&&!n.isLeaf())for(let e=0;e<n.node.children.length;e++)n.node.children[e]&&o.push(E.acquire().init(n).advance(e));E.release(n)}}_forEachNodeDepthOrdered(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:R.DepthOrder.FRONT_TO_BACK,i=E.acquire().init(e);const s=[i];for(function(e,t,n){if(!V.length)for(let o=0;o<8;++o)V.push({index:0,distance:0});for(let o=0;o<8;++o){const n=v[o];V.data[o].index=o,V.data[o].distance=j(e,t,n)}V.sort(((e,t)=>e.distance-t.distance));for(let o=0;o<8;++o)n[o]=V.data[o].index}(n,o,K);0!==s.length;){if(i=s.pop(),t(i)&&!i.isLeaf())for(let e=7;e>=0;--e){const t=K[e];i.node.children[t]&&s.push(E.acquire().init(i).advance(t))}E.release(i)}}_remove(e,t,n){D.clear();const o=n.advanceTo(t,((e,t)=>{D.push(e.node),D.push(t)}))?n.node.terminals:n.node.residents;if(o.removeUnordered(e),0===o.length)for(let i=D.length-2;i>=0;i-=2){const e=D.data[i],t=D.data[i+1];if(!this._purge(e,t))break}}_nodeIsEmpty(e){if(0!==e.terminals.length)return!1;if(null!==e.residents)return 0===e.residents.length;for(let t=0;t<e.children.length;t++)if(e.children[t])return!1;return!0}_purge(e,t){return t>=0&&(e.children[t]=null),!!this._nodeIsEmpty(e)&&(null===e.residents&&(e.residents=new u.Z({shrink:!0})),!0)}_add(e,t){t.advanceTo(this.objectToBoundingSphere(e))?t.node.terminals.push(e):(t.node.residents.push(e),t.node.residents.length>this._maximumObjectsPerNode&&t.depth<this._maximumDepth&&this._split(t))}_split(e){const t=e.node.residents;e.node.residents=null;for(let n=0;n<t.length;n++){const o=E.acquire().init(e);this._add(t.at(n),o),E.release(o)}}_grow(e,t){if(0!==t&&(S(e,t,(e=>this.objectToBoundingSphere(e)),y),M(y[3])&&!this._fitsInsideTree(y)))if(this._nodeIsEmpty(this._root.node))(0,a.h)(y,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const e=this._rootBoundsForRootAsSubNode(y);this._placingRootViolatesMaxDepth(e)?this._rebuildTree(y,e):this._growRootAsSubNode(e),E.release(e)}}_rebuildTree(e,t){(0,r.c)(G,t.bounds),G[3]=t.halfSize,S([e,G],2,(e=>e),k);const n=E.acquire().init(this._root);this._root.initFrom(null,k,k[3]),this._root.increaseHalfSize(1.25),this._forEachNode(n,(e=>(this.add(e.node.terminals.data,e.node.terminals.length),null!==e.node.residents&&this.add(e.node.residents.data,e.node.residents.length),!0))),E.release(n)}_placingRootViolatesMaxDepth(e){const t=Math.log(e.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,(e=>(n=Math.max(n,e.depth),n+t<=this._maximumDepth))),n+t>this._maximumDepth}_rootBoundsForRootAsSubNode(e){const t=e[3],n=e;let o=-1/0;const i=this._root.bounds,s=this._root.halfSize;for(let h=0;h<3;h++){const e=i[h]-s-(n[h]-t),r=n[h]+t-(i[h]+s),d=Math.max(0,Math.ceil(e/(2*s))),a=Math.max(0,Math.ceil(r/(2*s)))+1,c=2**Math.ceil(Math.log(d+a)*Math.LOG2E);o=Math.max(o,c),q[h].min=d,q[h].max=a}for(let h=0;h<3;h++){let e=q[h].min,t=q[h].max;const n=(o-(e+t))/2;e+=Math.ceil(n),t+=Math.floor(n);const r=i[h]-s-e*s*2;z[h]=r+(t+e)*s}const r=o*s;return z[3]=r*P,E.acquire().initFrom(null,z,r,0)}_growRootAsSubNode(e){const t=this._root.node;(0,r.c)(y,this._root.bounds),y[3]=this._root.halfSize,this._root.init(e),e.advanceTo(y,null,!0),e.node.children=t.children,e.node.residents=t.residents,e.node.terminals=t.terminals}_shrink(){for(;;){const e=this._findShrinkIndex();if(-1===e)break;this._root.advance(e),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let e=null;const t=this._root.node.children;let n=0,o=0;for(;o<t.length&&null==e;)n=o++,e=t[n];for(;o<t.length;)if(t[o++])return-1;return n}_isDegenerate(e){return!M(this.objectToBoundingSphere(e)[3])}_fitsInsideTree(e){const t=this._root.bounds,n=this._root.halfSize;return e[3]<=n&&e[0]>=t[0]-n&&e[0]<=t[0]+n&&e[1]>=t[1]-n&&e[1]<=t[1]+n&&e[2]>=t[2]-n&&e[2]<=t[2]+n}toJSON(){const{maximumDepth:e,maximumObjectsPerNode:t,_objectCount:n}=this,o=this._nodeToJSON(this._root.node);return{maximumDepth:e,maximumObjectsPerNode:t,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:o}}}_nodeToJSON(e){var t,n;const o=e.children.map((e=>e?this._nodeToJSON(e):null)),i=null===(t=e.residents)||void 0===t?void 0:t.map((e=>this.objectToBoundingSphere(e))),s=null===(n=e.terminals)||void 0===n?void 0:n.map((e=>this.objectToBoundingSphere(e)));return{children:o,residents:i,terminals:s}}static fromJSON(e){const t=new R((e=>e),{maximumDepth:e.maximumDepth,maximumObjectsPerNode:e.maximumObjectsPerNode});return t._objectCount=e.objectCount,t._root.initFrom(e.root.node,e.root.bounds,e.root.halfSize,e.root.depth),t}}class E{constructor(){this.bounds=(0,a.c)(),this.halfSize=0,this.initFrom(null,null,0,0)}init(e){return this.initFrom(e.node,e.bounds,e.halfSize,e.depth)}initFrom(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.depth;return this.node=null!=e?e:E.createEmptyNode(),null!=t&&(0,a.h)(t,this.bounds),this.halfSize=n,this.depth=o,this}increaseHalfSize(e){this.halfSize*=e,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*P}advance(e){let t=this.node.children[e];t||(t=E.createEmptyNode(),this.node.children[e]=t),this.node=t,this.halfSize/=2,this.depth++;const n=v[e];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(;;){if(this.isTerminalFor(e))return t&&t(this,-1),!0;if(this.isLeaf()){if(!n)return t&&t(this,-1),!1;this.node.residents=null}const o=this._childIndex(e);t&&t(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(e){return e[3]>this.halfSize/2}_childIndex(e){const t=this.bounds;return(t[0]<e[0]?1:0)+(t[1]<e[1]?2:0)+(t[2]<e[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new u.Z({shrink:!0}),residents:new u.Z({shrink:!0})}}static acquire(){return E._pool.acquire()}static release(e){E._pool.release(e)}static clearPool(){E._pool.prune()}}function N(e,t){e[0]=Math.min(e[0],t[0]-t[3]),e[1]=Math.min(e[1],t[1]-t[3]),e[2]=Math.min(e[2],t[2]-t[3])}function A(e,t){e[0]=Math.max(e[0],t[0]+t[3]),e[1]=Math.max(e[1],t[1]+t[3]),e[2]=Math.max(e[2],t[2]+t[3])}function F(e,t,n){n[0]=e[0]+t,n[1]=e[1]+t,n[2]=e[2]+t}function S(e,t,n,o){if(1===t){const t=n(e[0]);(0,a.h)(t,o)}else{C[0]=1/0,C[1]=1/0,C[2]=1/0,w[0]=-1/0,w[1]=-1/0,w[2]=-1/0;for(let o=0;o<t;o++){const t=n(e[o]);M(t[3])&&(N(C,t),A(w,t))}(0,r.p)(o,C,w,.5),o[3]=Math.max(w[0]-C[0],w[1]-C[1],w[2]-C[2])/2}}function x(e,t){let n,o=1/0;for(let i=0;i<8;++i){const s=j(e,t,B[i]);s<o&&(o=s,n=B[i])}return n}function j(e,t,n){return t*(e[0]*n[0]+e[1]*n[1]+e[2]*n[2])}function M(e){return!isNaN(e)&&e!==-1/0&&e!==1/0&&e>0}E._pool=new c.Z(E),function(e){var t;(t=e.DepthOrder||(e.DepthOrder={}))[t.FRONT_TO_BACK=1]="FRONT_TO_BACK",t[t.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(R||(R={}));const v=[(0,h.f)(-1,-1,-1),(0,h.f)(1,-1,-1),(0,h.f)(-1,1,-1),(0,h.f)(1,1,-1),(0,h.f)(-1,-1,1),(0,h.f)(1,-1,1),(0,h.f)(-1,1,1),(0,h.f)(1,1,1)],B=[(0,h.f)(-1,-1,-1),(0,h.f)(-1,-1,1),(0,h.f)(-1,1,-1),(0,h.f)(-1,1,1),(0,h.f)(1,-1,-1),(0,h.f)(1,-1,1),(0,h.f)(1,1,-1),(0,h.f)(1,1,1)],P=Math.sqrt(3),L=[null];const z=(0,a.c)(),I=(0,h.c)(),C=(0,h.c)(),w=(0,h.c)(),D=new u.Z,H=(0,a.c)(),y=(0,a.c)(),G=(0,a.c)(),k=(0,a.c)(),q=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],V=new u.Z,K=[0,0,0,0,0,0,0,0],W=R;var Z=n(83715);function U(e,t,n){const o=(0,a.c)(),i=(0,a.g)(o);return(0,r.q)(i,i,e,.5),(0,r.q)(i,i,t,.5),o[3]=(0,r.o)(i,e),(0,r.g)(i,i,n),o}let J=class{constructor(){this._idToComponent=new Map,this._components=new W((e=>e.bounds)),this._edges=new W((e=>e.bounds)),this._tmpLineSegment=(0,d.Ue)(),this._tmpP1=(0,h.c)(),this._tmpP2=(0,h.c)(),this._tmpP3=(0,h.c)(),this.remoteClient=null}async fetchCandidates(e,t){await Promise.resolve(),(0,i.k_)(t),await this._ensureEdgeLocations(e,t);const n=[];return this._edges.forEachNeighbor((t=>(this._addCandidates(e,t,n),n.length<1e3)),e.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(e,t){const n=[];if(this._components.forEachNeighbor((e=>{if(null==e.info){const{id:t,uid:o}=e;n.push({id:t,uid:o})}return!0}),e.bounds),!n.length)return;const o={components:n},i=await this.remoteClient.invoke("fetchAllEdgeLocations",o,null!==t&&void 0!==t?t:{});for(const s of i.components)this._setFetchEdgeLocations(s)}async add(e){const t=new Q(e.id,e.bounds);return this._idToComponent.set(t.id,t),this._components.add([t]),{result:{}}}async remove(e){const t=this._idToComponent.get(e.id);if(t){const e=[];this._edges.forEachNeighbor((n=>(n.component===t&&e.push(n),!0)),t.bounds),this._edges.remove(e),this._components.remove([t]),this._idToComponent.delete(t.id)}return{result:{}}}_setFetchEdgeLocations(e){const t=this._idToComponent.get(e.id);if(null==t||e.uid!==t.uid)return;const n=Z.n_.createView(e.locations),o=new Array(n.count),i=(0,h.c)(),s=(0,h.c)();for(let h=0;h<n.count;h++){n.position0.getVec(h,i),n.position1.getVec(h,s);const r=U(i,s,e.origin),d=new Y(t,h,r);o[h]=d}this._edges.add(o);const{objectIds:r,origin:d}=e;t.info={locations:n,objectIds:r,origin:d}}_addCandidates(e,t,n){const{info:o}=t.component,{origin:i,objectIds:s}=o,h=o.locations,d=h.position0.getVec(t.index,this._tmpP1),a=h.position1.getVec(t.index,this._tmpP2);(0,r.g)(d,d,i),(0,r.g)(a,a,i);const c=s[h.componentIndex.get(t.index)];this._addEdgeCandidate(e,c,d,a,n),this._addVertexCandidate(e,c,d,n),this._addVertexCandidate(e,c,a,n)}_addEdgeCandidate(e,t,n,o,i){if(!e.returnEdge)return;const s=(0,a.g)(e.bounds),c=(0,d.zk)(n,o,this._tmpLineSegment),u=(0,d.nF)(c,s,this._tmpP3);(0,a.n)(e.bounds,u)&&i.push({type:"edge",objectId:t,target:(0,h.g)(u),distance:(0,r.o)(s,u),start:(0,h.g)(n),end:(0,h.g)(o)})}_addVertexCandidate(e,t,n,o){if(!e.returnVertex)return;const i=(0,a.g)(e.bounds);(0,a.n)(e.bounds,n)&&o.push({type:"vertex",objectId:t,target:(0,h.g)(n),distance:(0,r.o)(i,n)})}};J=(0,o._)([(0,s.j)("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],J);const X=J;class Q{constructor(e,t){this.id=e,this.bounds=t,this.info=null,this.uid=++Q.uid}}Q.uid=0;class Y{constructor(e,t,n){this.component=e,this.index=t,this.bounds=n}}}}]);
//# sourceMappingURL=387.e93e423f.chunk.js.map